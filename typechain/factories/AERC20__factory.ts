/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { AERC20 } from "../AERC20";

export class AERC20__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AERC20> {
    return super.deploy(overrides || {}) as Promise<AERC20>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AERC20 {
    return super.attach(address) as AERC20;
  }
  connect(signer: Signer): AERC20__factory {
    return super.connect(signer) as AERC20__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): AERC20 {
    return new Contract(address, _abi, signerOrProvider) as AERC20;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "shares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610bc3806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806370a082311161006657806370a082311461016f578063a457c2d71461019f578063a9059cbb146101cf578063ce7c2ac2146101ff578063dd62ed3e1461022f5761009e565b8063095ea7b3146100a357806318160ddd146100d357806323b872dd146100f157806339509351146101215780633a98ef3914610151575b600080fd5b6100bd60048036038101906100b891906108ba565b61025f565b6040516100ca9190610915565b60405180910390f35b6100db610274565b6040516100e8919061093f565b60405180910390f35b61010b6004803603810190610106919061095a565b61027a565b6040516101189190610915565b60405180910390f35b61013b600480360381019061013691906108ba565b610390565b6040516101489190610915565b60405180910390f35b61015961042f565b604051610166919061093f565b60405180910390f35b610189600480360381019061018491906109ad565b610435565b604051610196919061093f565b60405180910390f35b6101b960048036038101906101b491906108ba565b610486565b6040516101c69190610915565b60405180910390f35b6101e960048036038101906101e491906108ba565b610525565b6040516101f69190610915565b60405180910390f35b610219600480360381019061021491906109ad565b6105a7565b604051610226919061093f565b60405180910390f35b610249600480360381019061024491906109da565b6105bf565b604051610256919061093f565b60405180910390f35b600061026c3384846105e4565b905092915050565b60035481565b600081600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103089190610a49565b92505081905550610322848461031d856106d7565b61072c565b90508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610381919061093f565b60405180910390a39392505050565b600081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461041e9190610a7d565b925050819055506001905092915050565b60045481565b600061047f600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107e5565b9050919050565b600081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105149190610a49565b925050819055506001905092915050565b600061053a3384610535856106d7565b61072c565b90508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610599919061093f565b60405180910390a392915050565b60056020528060005260406000206000915090505481565b6006602052816000526040600020602052806000526040600020600091509150505481565b600081600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516106c4919061093f565b60405180910390a3600190509392505050565b600080600354905060006004549050600081036106f8578392505050610727565b6000820361070b57600092505050610727565b8181856107189190610ad3565b6107229190610b5c565b925050505b919050565b600081600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461077d9190610a49565b9250508190555081600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107d39190610a7d565b92505081905550600190509392505050565b6000806004549050600081036107ff57600091505061081c565b806003548461080e9190610ad3565b6108189190610b5c565b9150505b919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061085182610826565b9050919050565b61086181610846565b811461086c57600080fd5b50565b60008135905061087e81610858565b92915050565b6000819050919050565b61089781610884565b81146108a257600080fd5b50565b6000813590506108b48161088e565b92915050565b600080604083850312156108d1576108d0610821565b5b60006108df8582860161086f565b92505060206108f0858286016108a5565b9150509250929050565b60008115159050919050565b61090f816108fa565b82525050565b600060208201905061092a6000830184610906565b92915050565b61093981610884565b82525050565b60006020820190506109546000830184610930565b92915050565b60008060006060848603121561097357610972610821565b5b60006109818682870161086f565b93505060206109928682870161086f565b92505060406109a3868287016108a5565b9150509250925092565b6000602082840312156109c3576109c2610821565b5b60006109d18482850161086f565b91505092915050565b600080604083850312156109f1576109f0610821565b5b60006109ff8582860161086f565b9250506020610a108582860161086f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a5482610884565b9150610a5f83610884565b925082821015610a7257610a71610a1a565b5b828203905092915050565b6000610a8882610884565b9150610a9383610884565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ac857610ac7610a1a565b5b828201905092915050565b6000610ade82610884565b9150610ae983610884565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b2257610b21610a1a565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b6782610884565b9150610b7283610884565b925082610b8257610b81610b2d565b5b82820490509291505056fea26469706673582212208c5b381b100fcd3d6b6d7ff1a2320148c880b36e0ed1847c61be15703478980864736f6c634300080f0033";
