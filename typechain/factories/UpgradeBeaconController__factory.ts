/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { UpgradeBeaconController } from "../UpgradeBeaconController";

export class UpgradeBeaconController__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UpgradeBeaconController> {
    return super.deploy(overrides || {}) as Promise<UpgradeBeaconController>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UpgradeBeaconController {
    return super.attach(address) as UpgradeBeaconController;
  }
  connect(signer: Signer): UpgradeBeaconController__factory {
    return super.connect(signer) as UpgradeBeaconController__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UpgradeBeaconController {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UpgradeBeaconController;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_beacon",
        type: "address",
      },
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6107588061010d6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a6146100515780638da5cb5b1461005b57806399a88ec414610079578063f2fde38b14610095575b600080fd5b6100596100b1565b005b6100636100c5565b604051610070919061045d565b60405180910390f35b610093600480360381019061008e91906104a9565b6100ee565b005b6100af60048036038101906100aa91906104e9565b61022c565b005b6100b96102af565b6100c3600061032d565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6100f66102af565b6100ff826103f1565b61013e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013590610573565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff1682604051602001610168919061045d565b604051602081830303815290604052604051610184919061060d565b6000604051808303816000865af19150503d80600081146101c1576040519150601f19603f3d011682016040523d82523d6000602084013e6101c6565b606091505b50509050806101d9573d6000803e3d6000fd5b8273ffffffffffffffffffffffffffffffffffffffff167fc945ae30494f6ee00b9e4bf1fec5653ced7244b559666f44f9a88ea732e957b08360405161021f919061045d565b60405180910390a2505050565b6102346102af565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029a90610696565b60405180910390fd5b6102ac8161032d565b50565b6102b7610414565b73ffffffffffffffffffffffffffffffffffffffff166102d56100c5565b73ffffffffffffffffffffffffffffffffffffffff161461032b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032290610702565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104478261041c565b9050919050565b6104578161043c565b82525050565b6000602082019050610472600083018461044e565b92915050565b600080fd5b6104868161043c565b811461049157600080fd5b50565b6000813590506104a38161047d565b92915050565b600080604083850312156104c0576104bf610478565b5b60006104ce85828601610494565b92505060206104df85828601610494565b9150509250929050565b6000602082840312156104ff576104fe610478565b5b600061050d84828501610494565b91505092915050565b600082825260208201905092915050565b7f626561636f6e2021636f6e747261637400000000000000000000000000000000600082015250565b600061055d601083610516565b915061056882610527565b602082019050919050565b6000602082019050818103600083015261058c81610550565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156105c75780820151818401526020810190506105ac565b838111156105d6576000848401525b50505050565b60006105e782610593565b6105f1818561059e565b93506106018185602086016105a9565b80840191505092915050565b600061061982846105dc565b915081905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610680602683610516565b915061068b82610624565b604082019050919050565b600060208201905081810360008301526106af81610673565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006106ec602083610516565b91506106f7826106b6565b602082019050919050565b6000602082019050818103600083015261071b816106df565b905091905056fea2646970667358221220fcc7efad46bbccef14fb37a42a6a3b9d7584bb5f1b8acfb8987199f8996542a064736f6c634300080f0033";
